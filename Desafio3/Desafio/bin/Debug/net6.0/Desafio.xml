<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Desafio</name>
    </assembly>
    <members>
        <member name="T:Desafio.Controller.ConsultaController">
            <summary>
            Define uma <see cref="T:Desafio.Controller.ConsultaController"/> com <see cref="T:Desafio.Model.Consulta"/> de um consultório odontológico.
            </summary>
        </member>
        <member name="T:Desafio.Controller.ValidacaoController">
            <summary>
            Define a validadação de todos dados do <see cref="T:Desafio.Model.Paciente"/> e da <see cref="T:Desafio.Controller.ConsultaController"/>.
            </summary>
        </member>
        <member name="T:Desafio.Data.ConsultorioContexto">
            <summary>
                Define o a classe <see cref="T:Desafio.Data.ConsultorioContexto"/> que realiza a integração com o banco
                de dados <see langword="ConsultorioDB"/>.
            </summary>
        </member>
        <member name="P:Desafio.Data.ConsultorioContexto.Pacientes">
            <summary>  
                Propriedade referente a tabela <see langword="Pacientes"/> do banco de dados <see langword="ConsultorioDB"/>.
            </summary>
        </member>
        <member name="P:Desafio.Data.ConsultorioContexto.Consultas">
            <summary>
                Propriedade referente a tabela <see langword="Consultas"/> do banco de dados<see langword="ConsultorioDB"/>.
            </summary>
        </member>
        <member name="M:Desafio.Data.ConsultorioContexto.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
             <summary>
                 Método sobrescrico que realiza a configuração do banco de dados que vai ser usado nesse contexto.
             </summary>  
            
             <param name="optionsBuilder">
                 Um construtor usado para criar ou modificar opções para este contexto.
             </param>
        </member>
        <member name="T:Desafio.Data.DAO.PacienteDAO">
            <summary>
                Define a classe <see cref="T:Desafio.Data.DAO.PacienteDAO" /> que utiliza a tabela <see cref="P:Desafio.Data.ConsultorioContexto.Pacientes" />
                do banco de dados.
            </summary>
        </member>
        <member name="M:Desafio.Data.DAO.PacienteDAO.#ctor(Desafio.Data.ConsultorioContexto)">
             <summary>   Inicializa uma instância da classe <see cref="T:Desafio.Data.DAO.PacienteDAO" />. </summary>
            
             <param name="contexto"> Referente a um objeto do <see cref="T:Desafio.Data.ConsultorioContexto" />. </param>
        </member>
        <member name="M:Desafio.Data.DAO.PacienteDAO.Adicionar(Desafio.Model.Paciente)">
             <summary>   Realiza a adição de um <see cref="T:Desafio.Model.Paciente" /> do banco de dados. </summary>
            
             <param name="paciente"> Representa um objeto do <see cref="T:Desafio.Model.Paciente" />. </param>
        </member>
        <member name="M:Desafio.Data.DAO.PacienteDAO.Remover(Desafio.Model.Paciente)">
             <summary>   Realiza a remoção de um <see cref="T:Desafio.Model.Paciente" /> do banco de dados. </summary>
            
             <param name="paciente"> Representa um objeto do <see cref="T:Desafio.Model.Paciente" />. </param>
        </member>
        <member name="M:Desafio.Data.DAO.PacienteDAO.ListaTodos">
             <summary>
                 Realiza a listagem de todos os <see cref="T:Desafio.Model.Paciente">Pacientes</see> da lista.
             </summary>
            
             <returns>   Uma <see cref="!:IList" /> do tipo <see cref="T:Desafio.Model.Paciente" />. </returns>
        </member>
        <member name="M:Desafio.Data.DAO.PacienteDAO.ListaPorCPF(System.Int64)">
             <summary>
                 Realiza a listagem de um <see cref="T:Desafio.Model.Paciente" /> com o CPF igual ao <paramref name="cpf"/>.
             </summary>
            
             <param name="cpf">  Referente a propriedade <see cref="P:Desafio.Model.Paciente.CPF"/>. </param>
            
             <returns>
                 <list type="bullet">
                   <item>Se o <see cref="T:Desafio.Model.Paciente" /> existir retorna o <see cref="T:Desafio.Model.Paciente" /> que tem
                   CPF igual ao <paramref name="cpf"/>.</item>
                   <item>Caso contrário, retorna um <see cref="T:Desafio.Model.Paciente" /> <see langword="null"/>.</item>
                 </list>
             </returns>
        </member>
        <member name="T:Desafio.Data.DBConfig">
            <summary>   Configurações do banco de dados <see langword="ConsultorioDB"/>. </summary>
        </member>
        <member name="M:Desafio.Data.EntradaDeDadosViaConsole.LerCPF">
             <summary>   Realiza a leitura do <see cref="P:Desafio.Model.Paciente.CPF"/> via console. </summary>
            
             <returns>
                 <list type="bullet">
                   <item>
                   Se o valor for diferente de <see langword= "null"/>, retorna uma <see cref="T:System.String"/>
                   com valor do <see langword= "CPF"/>.
                   </item>
                   <item>Caso contrário, retorna uma <see cref="T:System.String"/> <see langword= "null"/>.</item>
                 </list>
             </returns>
        </member>
        <member name="M:Desafio.Data.EntradaDeDadosViaConsole.LerNome">
             <summary>   Realiza a leitura do <see cref="P:Desafio.Model.Paciente.Nome"/> via console. </summary>
            
             <returns>
                 <list type="bullet">
                   <item>
                   Se o valor for diferente de <see langword= "null"/>, retorna uma <see cref="T:System.String"/>
                   com valor do <see langword= "nome"/>.
                   </item>
                   <item>Caso contrário, retorna uma <see cref="T:System.String"/> <see langword= "null"/>.</item>
                 </list>
             </returns>
        </member>
        <member name="M:Desafio.Data.EntradaDeDadosViaConsole.LerDataHora(System.Int32)">
             <summary>   Realiza a leitura da <see langword="data ou hora"/> via console. </summary>
            
             <param name="tipo">
                 <see cref="T:System.Int32"/> referente ao <see cref="T:Desafio.Model.TipoDataHora"/> que vai ser lido.
             </param>
            
             <returns>
                 <list type="bullet">
                   <item>
                   Se o valor for diferente de <see langword= "null"/>, retorna uma <see cref="T:System.String"/>
                   com valor da <see langword= "data ou hora"/>.
                   </item>
                   <item>Caso contrário, retorna uma <see cref="T:System.String"/> <see langword= "null"/>.</item>
                 </list>
             </returns>
        </member>
        <member name="M:Desafio.Data.EntradaDeDadosViaConsole.LerOpcaoListagemDaAgenda">
             <summary>
                 Realiza a leitura da <see langword="opção de listagem da agenda"/> via console.
             </summary>        
            
             <returns>
                 <list type="bullet">
                   <item>
                   Se o valor for diferente de <see langword= "null"/>, retorna uma <see cref="T:System.String"/>
                   com valor da <see langword= "opção de listagem da agenda"/>.
                   </item>
                   <item>Caso contrário, retorna uma <see cref="T:System.String"/> <see langword= "null"/>.</item>
                 </list>
             </returns>
        </member>
        <member name="M:Desafio.Data.EntradaDeDadosViaConsole.CabecalhoDataHora(System.Int32)">
             <summary>
                 Devolde o cabeçalho de <see cref="M:Desafio.Data.EntradaDeDadosViaConsole.LerDataHora(System.Int32)"/> de acordo com o <see cref="T:Desafio.Model.TipoDataHora"/>.            
             </summary>
            
             <param name="tipo">
                 <see cref="T:System.Int32"/> referente ao <see cref="T:Desafio.Model.TipoDataHora"/> que vai ser lido.
             </param>
            
             <returns>   Uma <see cref="T:System.String"/> com o cabeçalho da data ou hora. </returns>
        </member>
        <member name="T:Desafio.Migrations.consultorio">
            <inheritdoc />
        </member>
        <member name="M:Desafio.Migrations.consultorio.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Desafio.Migrations.consultorio.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Desafio.Migrations.consultorio.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Desafio.Model.Consulta">
            <summary>   Define uma <see cref="T:Desafio.Model.Consulta"/> de um consultório odontológico. </summary>    
        </member>
        <member name="P:Desafio.Model.Consulta.Id">
            <summary>   Recebe um identificador para uma <see cref="T:Desafio.Model.Consulta"/>. </summary>
        </member>
        <member name="P:Desafio.Model.Consulta.CPFPaciente">
            <summary>   Recebe um identificador do <see cref="P:Desafio.Model.Consulta.Paciente"/>. </summary>
        </member>
        <member name="P:Desafio.Model.Consulta.Paciente">
            <summary>   Recebe um <see cref="P:Desafio.Model.Consulta.Paciente"/> para a <see cref="T:Desafio.Model.Consulta"/>. </summary>       
        </member>
        <member name="P:Desafio.Model.Consulta.DataHoraInicial">
            <summary>   Recebe a data e hora inicial da <see cref="T:Desafio.Model.Consulta"/>. </summary>        
        </member>
        <member name="P:Desafio.Model.Consulta.DataHoraFinal">
            <summary>   Recebe a data e hora final da <see cref="T:Desafio.Model.Consulta"/>. </summary>
        </member>
        <member name="M:Desafio.Model.Consulta.Tempo">
            <summary>   Retorna o <see langword="tempo"/> da <see cref="T:Desafio.Model.Consulta"/>. </summary>        
        </member>
        <member name="M:Desafio.Model.Consulta.Listar(System.Collections.Generic.IList{Desafio.Model.Consulta})">
             <summary>   Realiza a listagem das <paramref name="consultas"/>. </summary>
            
             <param name="consultas">
                 <see cref="T:System.Collections.Generic.IList`1"/> de <paramref name="consultas"/> que serão mostrados.
             </param>
            
             <returns>
                 Uma <see cref="T:System.String"/> com a listagem dos <paramref name="consultas"/> ordenadas por <see cref="P:Desafio.Model.Consulta.DataHoraInicial"/>.
             </returns>
        </member>
        <member name="M:Desafio.Model.Consulta.Equals(System.Object)">
            <summary>
            Sobreescreve método <see langword="Equals"/>.        
            </summary>
            <param name="obj">Representa um objeto de <see cref="T:Desafio.Model.Consulta"/>.</param>
            <returns>
            <list type="bullet">
            <item>
            Retorna <see langword="true"/> 
            <list type="bullet">
            <item>se a <see cref="T:Desafio.Model.Consulta"/> tiver o mesmo <see cref="P:Desafio.Model.Consulta.Paciente"/>.</item>
            <item>se a <see cref="T:Desafio.Model.Consulta"/> tiver a mesma <see cref="P:Desafio.Model.Consulta.DataHoraInicial"/>.</item>       
            </list>
            </item>
            <item>
            Retorna <see langword="false"/> caso contrário.
            </item>
            </list>
            </returns>
        </member>
        <member name="M:Desafio.Model.Consulta.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Desafio.Model.Paciente">
            <summary>   Define um <see cref="T:Desafio.Model.Paciente"/> de um consultório odontológico. </summary>
        </member>
        <member name="P:Desafio.Model.Paciente.CPF">
            <summary>   Recebe o CPF do <see cref="T:Desafio.Model.Paciente"/>. </summary>
        </member>
        <member name="P:Desafio.Model.Paciente.Nome">
            <summary>   Recebe o nome do <see cref="T:Desafio.Model.Paciente"/>. </summary>
        </member>
        <member name="P:Desafio.Model.Paciente.DtNascimento">
            <summary>   Recebe a Data de nascimento do <see cref="T:Desafio.Model.Paciente"/>. </summary>
        </member>
        <member name="M:Desafio.Model.Paciente.Idade">
            <summary>   Retorna a <see langword="idade"/> do <see cref="T:Desafio.Model.Paciente"/>. </summary>
        </member>
        <member name="M:Desafio.Model.Paciente.Listar(System.Collections.Generic.IList{Desafio.Model.Paciente})">
             <summary>   Realiza a listagem dos <paramref name="pacientes"/>. </summary>        
             <param name="pacientes">
                 <see cref="T:System.Collections.Generic.IList`1"/> de <paramref name="pacientes"/> que serão mostrados.
             </param>
            
             <returns>
                 Uma <see cref="T:System.String"/> com a listagem dos <paramref name="pacientes"/>, se o <see cref="T:Desafio.Model.Paciente">
                 paciente</see> tiver consultas futuras agendadas elas também serão mostradas.
             </returns>
        </member>
        <member name="M:Desafio.Model.Paciente.Equals(System.Object)">
             <summary>   Sobreescreve método <see langword="Equals"/>. </summary>
            
             <param name="obj">  Representa um objeto de <see cref="T:Desafio.Model.Paciente"/>. </param>
            
             <returns>
                 <list type="bullet">
                 <item>
                 Retorna <see langword="true"/> se o <see cref="T:Desafio.Model.Paciente"/> tiver o mesmo <see cref="P:Desafio.Model.Paciente.CPF"/>
                 que o <paramref name="obj"/> passado.
                 </item>
                 <item>
                 Retorna <see langword="false"/> caso contrário.
                 </item>
                 </list>
             </returns>
        </member>
        <member name="M:Desafio.Model.Paciente.GetHashCode">
            <inheritdoc/>
        </member>
    </members>
</doc>
